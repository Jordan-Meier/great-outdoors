<?php
/**
 * @file
 * Developed by Gabor Szanto.
 * hello@szantogabor.com
 * http://szantogabor.com
 */

define('JQUERY_SCROLLTO_DIR', 'jquery.scrollTo');
define('JQUERY_SCROLLTO_FILE', '/jquery.scrollTo.js');
define('JQUERY_SCROLLTO_MIN_FILE', '/jquery.scrollTo.min.js');
define('JQUERY_LOCALSCROLL_DIR', 'jquery.localScroll');
define('JQUERY_LOCALSCROLL_FILE', '/jquery.localScroll.js');
define('JQUERY_LOCALSCROLL_MIN_FILE', '/jquery.localScroll.min.js');

/**
 * Implements hook_page_build().
 */
function jquery_localscroll_page_build(&$page) {
  $ids = list_extract_allowed_values(variable_get('jquery_localscroll_id', ''), 'list_text', FALSE);
  $global = variable_get('jquery_localscroll_global', FALSE);
  $waypoints = FALSE;
  if (!empty($ids) || $global) {
    drupal_add_js(drupal_get_path('module', 'jquery_localscroll') . '/jquery_localscroll.js', array('weight' => 1));
    $js_settings = array(
      'global' => $global,
      'ids' => $ids,
      'hash' => variable_get('jquery_localscroll_hash', FALSE),
      'duration' => variable_get('jquery_localscroll_duration', 500),
      'offset' => variable_get('jquery_localscroll_offset', 0),
      //'floating_block_offset' => variable_get('jquery_localscroll_offset', 0),
    );
    // By defaqult the floating block offset is the same, as the normal offset.
    if (module_exists('floating_block') && variable_get('jquery_localscroll_floating_block_offset', 0)) {
      $js_settings['floating_block_offset'] = variable_get('jquery_localscroll_floating_block_offset');
    }

    if (module_exists('waypoints')) {
      if (variable_get('jquery_localscroll_onscroll', FALSE)) {
        $js_settings['onscroll'] = TRUE;
        $waypoints = TRUE;
      }

      if (variable_get('jquery_localscroll_onscroll_update_hash', FALSE)) {
        $js_settings['onscroll_update_hash'] = TRUE;
        $waypoints = TRUE;
      }

      if ($waypoints) {
        $js_settings['waypoints'] = TRUE;
        drupal_add_library('waypoints', 'waypoints');
      }
    }

    drupal_add_js(array('jquery_localscroll' => $js_settings), 'setting');
    if ($path = libraries_get_path(JQUERY_LOCALSCROLL_DIR)) {
      drupal_add_js(jquery_localscroll_get_js($path));
    }
    if ($path = libraries_get_path(JQUERY_SCROLLTO_DIR)) {
      drupal_add_js(jquery_scrollto_get_js($path));
    }
  }
}

/**
 * Implements hook_menu().
 */
function jquery_localscroll_menu() {
  $items = array();

  $items['admin/config/user-interface/jquery_localscroll'] = array(
    'title' => 'jQuery LocalScroll settings',
    'description' => 'Configure jQuery Localscroll module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('jquery_localscroll_settings_form'),
    'access arguments' => array('access administration pages'),
  );

  return $items;
}

/**
 * Form builder to basic plugin settings.
 */
function jquery_localscroll_settings_form($form, $form_state) {
  $form['jquery_localscroll_plugin_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('jQuery LocalScroll plugin settings'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['jquery_localscroll_plugin_settings']['colorbox_compression_type'] = array(
    '#type' => 'radios',
    '#title' => t('Choose LocalScroll compression level'),
    '#options' => array(
      'min' => t('Production (Minified)'),
      'none' => t('Development (Uncompressed Code)'),
    ),
    '#default_value' => variable_get('jquery_localscroll_compression_type', 'min'),
  );

  $form['jquery_localscroll'] = array(
    '#type' => 'fieldset',
    '#title' => t('Basic settings'),
    'jquery_localscroll_global' => array(
      '#title' => t('Global'),
      '#type' => 'checkbox',
      '#description' => t('Active jQuery LocalScroll plugin globally. It means, all urls with hash will be scrollable.'),
      '#default_value' => variable_get('jquery_localscroll_global', ''),
    ),
    'jquery_localscroll_id' => array(
      '#title' => t('Css id'),
      '#type' => 'textarea',
      '#description' => t("The css id's of menu's, which contains the menu items with anchors. Enter one id per line. Always use the anchors(#) in strings!"),
      '#default_value' => variable_get('jquery_localscroll_id', ''),
    ),
    'jquery_localscroll_hash' => array(
      '#title' => t('Hash'),
      '#type' => 'checkbox',
      '#description' => t('Append the hash to the url.'),
      '#default_value' => variable_get('jquery_localscroll_hash', ''),
    ),
    'jquery_localscroll_duration' => array(
      '#title' => t('Duration'),
      '#type' => 'textfield',
      '#field_suffix' => t('ms'),
      '#size' => 10,
      '#description' => t('Length of the animation in ms.'),
      '#default_value' => variable_get('jquery_localscroll_duration', 500),
    ),
    'jquery_localscroll_offset' => array(
      '#title' => t('Offset'),
      '#type' => 'textfield',
      '#field_suffix' => t('px'),
      '#size' => 10,
      '#description' => t('Number of pixels will be added to the final position. Use a positive or negative integer'),
      '#default_value' => variable_get('jquery_localscroll_offset', 0),
    ),
  );


  /*
  @todo, it is a manual offset correction for floating block. it seems, we
  can trimm it automatically, so it isn't used.
  if (module_exists('floating_block')) {
    $form['jquery_localscroll']['jquery_localscroll_floating_block_offset'] = array(
      '#title' => t('Floating block start offset'),
      '#type' => 'textfield',
      '#field_suffix' => t('px'),
      '#size' => 10,
      '#description' => t('If you use module <em>Floating Block</em> the offset could be broken, when the floated menu is <strong>not floating</strong> yet. If this happens, you can use different offset to trimm it.'),
      '#default_value' => variable_get('jquery_localscroll_floating_block_offset', 0),
    );
  }
*/
  $form['jquery_localscroll_waypoints'] = array(
    '#type' => 'fieldset',
    '#title' => t('Waypoint settings'),
    '#description' => t('This settings requires <a href="http://drupal.org/project/waypoints">jQuery waypoints</a> module.'),
    'jquery_localscroll_onscroll' => array(
      '#title' => t('Set active on normal scroll'),
      '#type' => 'checkbox',
      '#disabled' => !module_exists('waypoints'),
      '#description' => t('The active class of menu item trails the hashes on normal scrolling.'),
      '#default_value' => variable_get('jquery_localscroll_onscroll', 0),
    ),
    'jquery_localscroll_onscroll_update_hash' => array(
      '#title' => t('Update hash'),
      '#type' => 'checkbox',
      '#disabled' => !module_exists('waypoints'),
      '#description' => t('Update hash after url in browser.'),
      '#default_value' => variable_get('jquery_localscroll_onscroll_update_hash', 0),
    ),
  );

  return system_settings_form($form);
}


/**
 * Return the JS filename for jQuery LocalScroll plugin.
 *
 * @return string
 *   JS path to jQuery LocalScroll plugin
 */
function jquery_localscroll_get_js($path) {
  if (file_exists($path . JQUERY_LOCALSCROLL_FILE) || file_exists($path . JQUERY_LOCALSCROLL_MIN_FILE)) {
    $jquery_localscroll_js_map = array('none' => JQUERY_LOCALSCROLL_FILE, 'min' => JQUERY_LOCALSCROLL_MIN_FILE);
    $jquery_localscroll_js = $jquery_localscroll_js_map[variable_get('jquery_localscroll_compression_type', 'min')];
    return $path . $jquery_localscroll_js;
  }
}

/**
 * Return the JS filename for jQuery ScrollTo plugin.
 *
 * @return string
 *   JS path to jQuery Scrollto plugin
 */
function jquery_scrollto_get_js($path) {
  if (file_exists($path . JQUERY_SCROLLTO_FILE) || file_exists($path . JQUERY_SCROLLTO_MIN_FILE)) {
    $jquery_scrollto_js_map = array('none' => JQUERY_SCROLLTO_FILE, 'min' => JQUERY_SCROLLTO_MIN_FILE);
    $jquery_scrollto_js = $jquery_scrollto_js_map[variable_get('jquery_localscroll_compression_type', 'min')];
    return $path . $jquery_scrollto_js;
  }
}
